# -*- coding: utf-8 -*-
"""task5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iqhoaGvttj1BxCGznMmxcq6PKGTGmvra
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix

df = pd.read_csv("/content/sample_data/student_data.csv")

print("Missing Values:", df.isnull().sum())

plt.figure(figsize=(12, 5))
sns.scatterplot(x=df["Study Hours"], y=df["Attendance"], hue=df["Pass"], palette={0: "red", 1: "green"}, alpha=0.7)
plt.axvline(x=10, color='blue', linestyle='--', label="Study Hours Threshold")
plt.axhline(y=75, color='purple', linestyle='--', label="Attendance Threshold")
plt.xlabel("Study Hours per Week")
plt.ylabel("Attendance Percentage")
plt.title("Study Hours vs. Attendance (Pass/Fail)")
plt.legend(title="Pass (1) / Fail (0)")
plt.show()

X = df[["Study Hours", "Attendance"]]
y = df["Pass"]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LogisticRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

x_min, x_max = X["Study Hours"].min() - 1, X["Study Hours"].max() + 1
y_min, y_max = X["Attendance"].min() - 1, X["Attendance"].max() + 1
xx, yy = np.meshgrid(np.linspace(x_min, x_max, 100),
                     np.linspace(y_min, y_max, 100))

plt.figure(figsize=(10, 6))
plt.contourf(xx, yy, Z, alpha=0.3, cmap="coolwarm")
scatter = plt.scatter(X_test["Study Hours"], X_test["Attendance"], c=y_test, edgecolors='k', cmap="coolwarm")
plt.colorbar(scatter, label="Pass (1) / Fail (0)")
for i, txt in enumerate(X_test.index):
    plt.annotate(txt, (X_test["Study Hours"].iloc[i], X_test["Attendance"].iloc[i]))
plt.xlabel("Study Hours")
plt.ylabel("Attendance (%)")
plt.title("Decision Boundary with Student Identifiers")
plt.show()
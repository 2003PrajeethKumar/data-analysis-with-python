# -*- coding: utf-8 -*-
"""Task6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11b-4kcvjasarkXf8NRu0EKjLem5KDUoY
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from statsmodels.tsa.arima.model import ARIMA
from sklearn.metrics import mean_absolute_percentage_error

df = pd.read_csv("/content/sample_data/realistic_sales_data.csv", parse_dates=["Date"], index_col="Date")

plt.figure(figsize=(12, 5))
plt.plot(df.index, df["Sales"], marker="o", linestyle="-", color="b", alpha=0.7)
plt.xlabel("Date")
plt.ylabel("Sales")
plt.title("Sales Trend Over Time")
plt.grid(True)
plt.show()

model = ARIMA(df["Sales"], order=(5,1,0))  # (p,d,q) values
tsarima_model = model.fit()

forecast_steps = 10
forecast = tsarima_model.forecast(steps=forecast_steps)
forecast_dates = pd.date_range(start=df.index[-1] + pd.Timedelta(days=1), periods=forecast_steps, freq="D")
forecast_df = pd.DataFrame({"Date": forecast_dates, "Forecasted Sales": forecast})
forecast_df.set_index("Date", inplace=True)

plt.figure(figsize=(12, 5))
plt.plot(df.index, df["Sales"], label="Actual Sales", color="blue")
plt.plot(forecast_df.index, forecast_df["Forecasted Sales"], label="Forecasted Sales", color="red", linestyle="dashed")
plt.xlabel("Date")
plt.ylabel("Sales")
plt.title("Sales Forecast Using ARIMA")
plt.legend()
plt.grid(True)
plt.show()

actual_sales = df["Sales"].iloc[-forecast_steps:]
mape = mean_absolute_percentage_error(actual_sales, forecast[:len(actual_sales)])
print(f"MAPE (Mean Absolute Percentage Error): {mape:.2f}")
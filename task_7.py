# -*- coding: utf-8 -*-
"""Task-7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14kjLphwwCZ3X5DwhzzhV4FITUox5w_cE

**Dimensionality Reduction Using PCA**
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.decomposition import PCA
from sklearn.datasets import load_iris

iris = load_iris()
X = iris.data
y = iris.target

pca = PCA(n_components=2)
X_pca = pca.fit_transform(X)


pca_df = pd.DataFrame(data=X_pca, columns=['PC1', 'PC2'])
pca_df['Target'] = y

plt.figure(figsize=(8,6))
scatter = plt.scatter(pca_df['PC1'], pca_df['PC2'], c=y, cmap='viridis', alpha=0.7)

legend_labels = iris.target_names
legend_handles = scatter.legend_elements()[0]
plt.legend(legend_handles, legend_labels, title='Classes')
plt.xlabel('Principal Component 1')
plt.ylabel('Principal Component 2')
plt.title('PCA on Iris Dataset')
plt.show()

""" **Stock Price Prediction Using ARIMA**"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from statsmodels.tsa.arima.model import ARIMA
from sklearn.metrics import mean_absolute_error, mean_squared_error

df = pd.read_csv('/content/synthetic_stock_prices.csv')

df.head()

df['Date'] = pd.to_datetime(df['Date'])
df.set_index('Date', inplace=True)

plt.figure(figsize=(10,5))
plt.plot(df['Close'], label='Close Price')
plt.xlabel('Date')
plt.ylabel('Close Price')
plt.title('Stock Price Time Series')
plt.legend()
plt.show()

train_size = int(len(df) * 0.8)
train, test = df['Close'][:train_size], df['Close'][train_size:]


model = ARIMA(train, order=(5,1,0))
model_fit = model.fit()

predictions = model_fit.forecast(steps=len(test))

mae = mean_absolute_error(test, predictions)
rmse = np.sqrt(mean_squared_error(test, predictions))
print(f'MAE: {mae}, RMSE: {rmse}')

plt.figure(figsize=(10,5))
plt.plot(test.index, test, label='Actual')
plt.plot(test.index, predictions, label='Predicted', linestyle='dashed')
plt.xlabel('Date')
plt.ylabel('Stock Price')
plt.title('Stock Price Prediction using ARIMA')
plt.legend()
plt.show()